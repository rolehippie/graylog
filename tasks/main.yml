# Standards: 1.2
---
- name: Create required group
  group:
    name: "{{ graylog_group }}"
    system: True
    state: present
  tags:
    - graylog

- name: Create required user
  user:
    name: "{{ graylog_user }}"
    group: "{{ graylog_group }}"
    password: "!"
    shell: /usr/sbin/nologin
    home: "{{ graylog_storage_path }}"
    create_home: False
    system: True
    state: present
  tags:
    - graylog

- name: Check package list
  package_facts:
    manager: auto
  tags:
    - graylog

- name: Fact repo package
  set_fact:
    graylog_repo_package_installed: "{{ ('graylog-%s-repository' % graylog_server_version) in ansible_facts.packages.keys() }}"
  tags:
    - graylog

- name: Download repo package
  when: not graylog_repo_package_installed
  get_url:
    url: "https://packages.graylog2.org/repo/packages/graylog-{{ graylog_server_version }}-repository_latest.deb"
    dest: /tmp/graylog-repository_latest.deb
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - graylog

- name: Install repo package
  when: not graylog_repo_package_installed
  apt:
    deb: /tmp/graylog-repository_latest.deb
    state: present
  tags:
    - graylog

- name: Delete repo package
  file:
    path: /tmp/graylog-repository_latest.deb
    state: absent
  tags:
    - graylog

- name: Install required packages
  loop:
    - openjdk-11-jre
    - "graylog-server={{ graylog_server_version }}*"
    - "graylog-integrations-plugins={{ graylog_server_version }}*"
  package:
    name: "{{ item }}"
    state: present
  tags:
    - graylog

- name: Install enterprise packages
  loop:
    - "graylog-enterprise-integrations-plugins={{ graylog_server_version }}*"
    - "graylog-enterprise-plugins={{ graylog_server_version }}*"
  when: graylog_enable_enterprise
  package:
    name: "{{ item }}"
    state: present
  tags:
    - graylog

- name: Install deb plugin
  notify:
    - Restart graylog-server
  loop: "{{ graylog_default_plugins + graylog_extra_plugins }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.type == "deb" and item.state | default("present") == "present"
  apt:
    deb: "{{ item.url }}"
    state: present
  tags:
    - graylog

- name: Remove deb plugin
  notify:
    - Restart graylog-server
  loop: "{{ graylog_default_plugins + graylog_extra_plugins }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.type == "deb" and item.state | default("present") == "absent"
  package:
    name: "{{ item.name }}"
    state: absent
  tags:
    - graylog

- name: Install jar plugin
  notify:
    - Restart graylog-server
  loop: "{{ graylog_default_plugins + graylog_extra_plugins }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.type == "jar" and item.state | default("present") == "present"
  get_url:
    url: "{{ item.url }}"
    dest: "/usr/share/graylog-server/plugin/{{ item.name }}.jar"
    owner: root
    group: root
    mode: o=rw,g=r,o=r
  tags:
    - graylog

- name: Remove jar plugin
  notify:
    - Restart graylog-server
  loop: "{{ graylog_default_plugins + graylog_extra_plugins }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.type == "jar" and item.state | default("present") == "absent"
  file:
    name: "/usr/share/graylog-server/plugin/{{ item.name }}.jar"
    state: absent
  tags:
    - graylog

- name: Create data directory
  file:
    path: "{{ graylog_storage_path }}"
    owner: "{{ graylog_user }}"
    group: "{{ graylog_group }}"
    mode: u=rwX,g=rX,o=rX
    state: directory
  tags:
    - graylog

- name: Enforce data ownership
  file:
    path: "{{ graylog_storage_path }}"
    owner: "{{ graylog_user }}"
    group: "{{ graylog_group }}"
    recurse: True
    follow: True
    mode: u=rwX,g=rX,o=rX
  tags:
    - graylog

- name: Create log directory
  file:
    dest: "{{ graylog_logs_path }}"
    owner: "{{ graylog_user }}"
    group: "{{ graylog_group }}"
    recurse: True
    mode: u=rwx,g=rx,o=rx
    state: directory
  tags:
    - graylog

- name: Write nodeid config
  notify:
    - Restart graylog-server
  copy:
    content: "{{ graylog_node_id }}"
    dest: /etc/graylog/server/node-id
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - graylog

- name: Write log4j2 config
  notify:
    - Restart graylog-server
  copy:
    src: log4j2.xml
    dest: /etc/graylog/server/log4j2.xml
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - graylog

- name: Write server config
  notify:
    - Restart graylog-server
  template:
    src: config.j2
    dest: /etc/graylog/server/server.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - graylog

- name: Write default config
  notify:
    - Restart graylog-server
  template:
    src: default.j2
    dest: /etc/default/graylog-server
    onwer: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - graylog

- name: Start graylog service
  systemd:
    name: graylog-server
    state: started
    daemon_reload: True
    masked: False
    enabled: True
  tags:
    - graylog

- name: Include oauth2 tasks
  when: graylog_oauth2_enabled | default(False)
  include_tasks: oauth2.yml
  tags:
    - graylog
    - oauth2

...
